<?xml version="1.0" encoding="UTF-8" ?>
<testsuites>
  <testsuite errors="0" failures="22" hostname="DESKTOP-E1EBHAB" id="0" name="UserSpec" package="forograils" tests="29" time="18.829" timestamp="2015-10-29T19:42:45">
      <properties />

      <testcase classname="forograils.UserSpec" name="test user attribute name: ab, field: minSize, valid: false " time="13.921">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|           Field error in object &apos;forograils.User&apos; on field &apos;name&apos;: rejected value [ab]; codes [forograils.User.name.minSize.error.forograils.User.name,forograils.User.name.minSize.error.name,forograils.User.name.minSize.error.java.lang.String,forograils.User.name.minSize.error,user.name.minSize.error.forograils.User.name,user.name.minSize.error.name,user.name.minSize.error.java.lang.String,user.name.minSize.error,forograils.User.name.minSize.notmet.forograils.User.name,forograils.User.name.minSize.notmet.name,forograils.User.name.minSize.notmet.java.lang.String,forograils.User.name.minSize.notmet,user.name.minSize.notmet.forograils.User.name,user.name.minSize.notmet.name,user.name.minSize.notmet.java.lang.String,user.name.minSize.notmet,minSize.notmet.forograils.User.name,minSize.notmet.name,minSize.notmet.java.lang.String,minSize.notmet]; arguments [name,class forograils.User,ab,3]; default message [Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]]&#xa;|           Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|           Field error in object &apos;forograils.User&apos; on field &apos;name&apos;: rejected value [ab]; codes [forograils.User.name.minSize.error.forograils.User.name,forograils.User.name.minSize.error.name,forograils.User.name.minSize.error.java.lang.String,forograils.User.name.minSize.error,user.name.minSize.error.forograils.User.name,user.name.minSize.error.name,user.name.minSize.error.java.lang.String,user.name.minSize.error,forograils.User.name.minSize.notmet.forograils.User.name,forograils.User.name.minSize.notmet.name,forograils.User.name.minSize.notmet.java.lang.String,forograils.User.name.minSize.notmet,user.name.minSize.notmet.forograils.User.name,user.name.minSize.notmet.name,user.name.minSize.notmet.java.lang.String,user.name.minSize.notmet,minSize.notmet.forograils.User.name,minSize.notmet.name,minSize.notmet.java.lang.String,minSize.notmet]; arguments [name,class forograils.User,ab,3]; default message [Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]]
|           Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute name: null, field: null, valid: false " time="0.266">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|           Field error in object &apos;forograils.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forograils.User.name.nullable.error.forograils.User.name,forograils.User.name.nullable.error.name,forograils.User.name.nullable.error.java.lang.String,forograils.User.name.nullable.error,user.name.nullable.error.forograils.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forograils.User.name.nullable.forograils.User.name,forograils.User.name.nullable.name,forograils.User.name.nullable.java.lang.String,forograils.User.name.nullable,user.name.nullable.forograils.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forograils.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;|           Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|           Field error in object &apos;forograils.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forograils.User.name.nullable.error.forograils.User.name,forograils.User.name.nullable.error.name,forograils.User.name.nullable.error.java.lang.String,forograils.User.name.nullable.error,user.name.nullable.error.forograils.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forograils.User.name.nullable.forograils.User.name,forograils.User.name.nullable.name,forograils.User.name.nullable.java.lang.String,forograils.User.name.nullable,user.name.nullable.forograils.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forograils.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]
|           Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute name: abc, field: size, valid: true " time="0.188" />

      <testcase classname="forograils.UserSpec" name="test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true " time="0.1" />

      <testcase classname="forograils.UserSpec" name="test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false " time="0.101">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|           Field error in object &apos;forograils.User&apos; on field &apos;name&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forograils.User.name.maxSize.error.forograils.User.name,forograils.User.name.maxSize.error.name,forograils.User.name.maxSize.error.java.lang.String,forograils.User.name.maxSize.error,user.name.maxSize.error.forograils.User.name,user.name.maxSize.error.name,user.name.maxSize.error.java.lang.String,user.name.maxSize.error,forograils.User.name.maxSize.exceeded.forograils.User.name,forograils.User.name.maxSize.exceeded.name,forograils.User.name.maxSize.exceeded.java.lang.String,forograils.User.name.maxSize.exceeded,user.name.maxSize.exceeded.forograils.User.name,user.name.maxSize.exceeded.name,user.name.maxSize.exceeded.java.lang.String,user.name.maxSize.exceeded,maxSize.exceeded.forograils.User.name,maxSize.exceeded.name,maxSize.exceeded.java.lang.String,maxSize.exceeded]; arguments [name,class forograils.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,50]; default message [Property [{0}] of class [{1}] with value [{2}] exceeds the maximum size of [{3}]]&#xa;|           Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|           Field error in object &apos;forograils.User&apos; on field &apos;name&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forograils.User.name.maxSize.error.forograils.User.name,forograils.User.name.maxSize.error.name,forograils.User.name.maxSize.error.java.lang.String,forograils.User.name.maxSize.error,user.name.maxSize.error.forograils.User.name,user.name.maxSize.error.name,user.name.maxSize.error.java.lang.String,user.name.maxSize.error,forograils.User.name.maxSize.exceeded.forograils.User.name,forograils.User.name.maxSize.exceeded.name,forograils.User.name.maxSize.exceeded.java.lang.String,forograils.User.name.maxSize.exceeded,user.name.maxSize.exceeded.forograils.User.name,user.name.maxSize.exceeded.name,user.name.maxSize.exceeded.java.lang.String,user.name.maxSize.exceeded,maxSize.exceeded.forograils.User.name,maxSize.exceeded.name,maxSize.exceeded.java.lang.String,maxSize.exceeded]; arguments [name,class forograils.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,50]; default message [Property [{0}] of class [{1}] with value [{2}] exceeds the maximum size of [{3}]]
|           Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute name: , field: blank, valid: false " time="0.155">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|           Field error in object &apos;forograils.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forograils.User.name.nullable.error.forograils.User.name,forograils.User.name.nullable.error.name,forograils.User.name.nullable.error.java.lang.String,forograils.User.name.nullable.error,user.name.nullable.error.forograils.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forograils.User.name.nullable.forograils.User.name,forograils.User.name.nullable.name,forograils.User.name.nullable.java.lang.String,forograils.User.name.nullable,user.name.nullable.forograils.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forograils.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;|           Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|           Field error in object &apos;forograils.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forograils.User.name.nullable.error.forograils.User.name,forograils.User.name.nullable.error.name,forograils.User.name.nullable.error.java.lang.String,forograils.User.name.nullable.error,user.name.nullable.error.forograils.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forograils.User.name.nullable.forograils.User.name,forograils.User.name.nullable.name,forograils.User.name.nullable.java.lang.String,forograils.User.name.nullable,user.name.nullable.forograils.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forograils.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]
|           Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute lastname: ab, field: minSize, valid: false " time="0.128">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;lastname&apos;: rejected value [ab]; codes [forograils.User.lastname.minSize.error.forograils.User.lastname,forograils.User.lastname.minSize.error.lastname,forograils.User.lastname.minSize.error.java.lang.String,forograils.User.lastname.minSize.error,user.lastname.minSize.error.forograils.User.lastname,user.lastname.minSize.error.lastname,user.lastname.minSize.error.java.lang.String,user.lastname.minSize.error,forograils.User.lastname.minSize.notmet.forograils.User.lastname,forograils.User.lastname.minSize.notmet.lastname,forograils.User.lastname.minSize.notmet.java.lang.String,forograils.User.lastname.minSize.notmet,user.lastname.minSize.notmet.forograils.User.lastname,user.lastname.minSize.notmet.lastname,user.lastname.minSize.notmet.java.lang.String,user.lastname.minSize.notmet,minSize.notmet.forograils.User.lastname,minSize.notmet.lastname,minSize.notmet.java.lang.String,minSize.notmet]; arguments [lastname,class forograils.User,ab,3]; default message [Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]]&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;lastname&apos;: rejected value [ab]; codes [forograils.User.lastname.minSize.error.forograils.User.lastname,forograils.User.lastname.minSize.error.lastname,forograils.User.lastname.minSize.error.java.lang.String,forograils.User.lastname.minSize.error,user.lastname.minSize.error.forograils.User.lastname,user.lastname.minSize.error.lastname,user.lastname.minSize.error.java.lang.String,user.lastname.minSize.error,forograils.User.lastname.minSize.notmet.forograils.User.lastname,forograils.User.lastname.minSize.notmet.lastname,forograils.User.lastname.minSize.notmet.java.lang.String,forograils.User.lastname.minSize.notmet,user.lastname.minSize.notmet.forograils.User.lastname,user.lastname.minSize.notmet.lastname,user.lastname.minSize.notmet.java.lang.String,user.lastname.minSize.notmet,minSize.notmet.forograils.User.lastname,minSize.notmet.lastname,minSize.notmet.java.lang.String,minSize.notmet]; arguments [lastname,class forograils.User,ab,3]; default message [Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]]
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute lastname: null, field: null, valid: false " time="0.191">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forograils.User.lastname.nullable.error.forograils.User.lastname,forograils.User.lastname.nullable.error.lastname,forograils.User.lastname.nullable.error.java.lang.String,forograils.User.lastname.nullable.error,user.lastname.nullable.error.forograils.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forograils.User.lastname.nullable.forograils.User.lastname,forograils.User.lastname.nullable.lastname,forograils.User.lastname.nullable.java.lang.String,forograils.User.lastname.nullable,user.lastname.nullable.forograils.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forograils.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forograils.User.lastname.nullable.error.forograils.User.lastname,forograils.User.lastname.nullable.error.lastname,forograils.User.lastname.nullable.error.java.lang.String,forograils.User.lastname.nullable.error,user.lastname.nullable.error.forograils.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forograils.User.lastname.nullable.forograils.User.lastname,forograils.User.lastname.nullable.lastname,forograils.User.lastname.nullable.java.lang.String,forograils.User.lastname.nullable,user.lastname.nullable.forograils.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forograils.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute lastname: abc, field: size, valid: true " time="0.172" />

      <testcase classname="forograils.UserSpec" name="test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true " time="0.109" />

      <testcase classname="forograils.UserSpec" name="test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false " time="0.139">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;lastname&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forograils.User.lastname.maxSize.error.forograils.User.lastname,forograils.User.lastname.maxSize.error.lastname,forograils.User.lastname.maxSize.error.java.lang.String,forograils.User.lastname.maxSize.error,user.lastname.maxSize.error.forograils.User.lastname,user.lastname.maxSize.error.lastname,user.lastname.maxSize.error.java.lang.String,user.lastname.maxSize.error,forograils.User.lastname.maxSize.exceeded.forograils.User.lastname,forograils.User.lastname.maxSize.exceeded.lastname,forograils.User.lastname.maxSize.exceeded.java.lang.String,forograils.User.lastname.maxSize.exceeded,user.lastname.maxSize.exceeded.forograils.User.lastname,user.lastname.maxSize.exceeded.lastname,user.lastname.maxSize.exceeded.java.lang.String,user.lastname.maxSize.exceeded,maxSize.exceeded.forograils.User.lastname,maxSize.exceeded.lastname,maxSize.exceeded.java.lang.String,maxSize.exceeded]; arguments [lastname,class forograils.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,50]; default message [Property [{0}] of class [{1}] with value [{2}] exceeds the maximum size of [{3}]]&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;lastname&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forograils.User.lastname.maxSize.error.forograils.User.lastname,forograils.User.lastname.maxSize.error.lastname,forograils.User.lastname.maxSize.error.java.lang.String,forograils.User.lastname.maxSize.error,user.lastname.maxSize.error.forograils.User.lastname,user.lastname.maxSize.error.lastname,user.lastname.maxSize.error.java.lang.String,user.lastname.maxSize.error,forograils.User.lastname.maxSize.exceeded.forograils.User.lastname,forograils.User.lastname.maxSize.exceeded.lastname,forograils.User.lastname.maxSize.exceeded.java.lang.String,forograils.User.lastname.maxSize.exceeded,user.lastname.maxSize.exceeded.forograils.User.lastname,user.lastname.maxSize.exceeded.lastname,user.lastname.maxSize.exceeded.java.lang.String,user.lastname.maxSize.exceeded,maxSize.exceeded.forograils.User.lastname,maxSize.exceeded.lastname,maxSize.exceeded.java.lang.String,maxSize.exceeded]; arguments [lastname,class forograils.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,50]; default message [Property [{0}] of class [{1}] with value [{2}] exceeds the maximum size of [{3}]]
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute lastname: , field: blank, valid: true " time="0.106">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forograils.User.lastname.nullable.error.forograils.User.lastname,forograils.User.lastname.nullable.error.lastname,forograils.User.lastname.nullable.error.java.lang.String,forograils.User.lastname.nullable.error,user.lastname.nullable.error.forograils.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forograils.User.lastname.nullable.forograils.User.lastname,forograils.User.lastname.nullable.lastname,forograils.User.lastname.nullable.java.lang.String,forograils.User.lastname.nullable,user.lastname.nullable.forograils.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forograils.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forograils.User.lastname.nullable.error.forograils.User.lastname,forograils.User.lastname.nullable.error.lastname,forograils.User.lastname.nullable.error.java.lang.String,forograils.User.lastname.nullable.error,user.lastname.nullable.error.forograils.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forograils.User.lastname.nullable.forograils.User.lastname,forograils.User.lastname.nullable.lastname,forograils.User.lastname.nullable.java.lang.String,forograils.User.lastname.nullable,user.lastname.nullable.forograils.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forograils.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute age: 13, field: minAge, valid: false " time="0.098" />

      <testcase classname="forograils.UserSpec" name="test user attribute age: 14, field: Age, valid: true " time="0.077" />

      <testcase classname="forograils.UserSpec" name="test user attribute username: , field: blank, valid: false " time="0.675">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forograils.User.username.nullable.error.forograils.User.username,forograils.User.username.nullable.error.username,forograils.User.username.nullable.error.java.lang.String,forograils.User.username.nullable.error,user.username.nullable.error.forograils.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forograils.User.username.nullable.forograils.User.username,forograils.User.username.nullable.username,forograils.User.username.nullable.java.lang.String,forograils.User.username.nullable,user.username.nullable.forograils.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forograils.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forograils.User.username.nullable.error.forograils.User.username,forograils.User.username.nullable.error.username,forograils.User.username.nullable.error.java.lang.String,forograils.User.username.nullable.error,user.username.nullable.error.forograils.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forograils.User.username.nullable.forograils.User.username,forograils.User.username.nullable.username,forograils.User.username.nullable.java.lang.String,forograils.User.username.nullable,user.username.nullable.forograils.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forograils.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - username(UserSpec.groovy:83)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute username: null, field: null, valid: false " time="0.288">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forograils.User.username.nullable.error.forograils.User.username,forograils.User.username.nullable.error.username,forograils.User.username.nullable.error.java.lang.String,forograils.User.username.nullable.error,user.username.nullable.error.forograils.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forograils.User.username.nullable.forograils.User.username,forograils.User.username.nullable.username,forograils.User.username.nullable.java.lang.String,forograils.User.username.nullable,user.username.nullable.forograils.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forograils.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forograils.User.username.nullable.error.forograils.User.username,forograils.User.username.nullable.error.username,forograils.User.username.nullable.error.java.lang.String,forograils.User.username.nullable.error,user.username.nullable.error.forograils.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forograils.User.username.nullable.forograils.User.username,forograils.User.username.nullable.username,forograils.User.username.nullable.java.lang.String,forograils.User.username.nullable,user.username.nullable.forograils.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forograils.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - username(UserSpec.groovy:83)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute username: pablo, field: unique, valid: false " time="0.333">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;username&apos;: rejected value [pablo]; codes [unique.forograils.User.username,unique.username,unique.java.lang.String,unique]; arguments []; default message [null]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Testing10]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Testing10]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
|               Field error in object &apos;forograils.User&apos; on field &apos;username&apos;: rejected value [pablo]; codes [unique.forograils.User.username,unique.username,unique.java.lang.String,unique]; arguments []; default message [null]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - username(UserSpec.groovy:83)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute username: pedro, field: username, valid: true " time="0.149" />

      <testcase classname="forograils.UserSpec" name="test user attribute password: , field: blank, valid: false " time="0.198">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forograils.User.password.nullable.error.forograils.User.password,forograils.User.password.nullable.error.password,forograils.User.password.nullable.error.java.lang.String,forograils.User.password.nullable.error,user.password.nullable.error.forograils.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forograils.User.password.nullable.forograils.User.password,forograils.User.password.nullable.password,forograils.User.password.nullable.java.lang.String,forograils.User.password.nullable,user.password.nullable.forograils.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forograils.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forograils.User.password.nullable.error.forograils.User.password,forograils.User.password.nullable.error.password,forograils.User.password.nullable.error.java.lang.String,forograils.User.password.nullable.error,user.password.nullable.error.forograils.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forograils.User.password.nullable.forograils.User.password,forograils.User.password.nullable.password,forograils.User.password.nullable.java.lang.String,forograils.User.password.nullable,user.password.nullable.forograils.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forograils.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute password: null, field: null, valid: false " time="0.143">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forograils.User.password.nullable.error.forograils.User.password,forograils.User.password.nullable.error.password,forograils.User.password.nullable.error.java.lang.String,forograils.User.password.nullable.error,user.password.nullable.error.forograils.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forograils.User.password.nullable.forograils.User.password,forograils.User.password.nullable.password,forograils.User.password.nullable.java.lang.String,forograils.User.password.nullable,user.password.nullable.forograils.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forograils.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forograils.User.password.nullable.error.forograils.User.password,forograils.User.password.nullable.error.password,forograils.User.password.nullable.error.java.lang.String,forograils.User.password.nullable.error,user.password.nullable.error.forograils.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forograils.User.password.nullable.forograils.User.password,forograils.User.password.nullable.password,forograils.User.password.nullable.java.lang.String,forograils.User.password.nullable,user.password.nullable.forograils.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forograils.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forograils.User]; default message [Property [{0}] of class [{1}] cannot be null]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute password: aaaaaA1, field: minSize, valid: false " time="0.116">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [aaaaaA1]; codes [forograils.User.password.minSize.error.forograils.User.password,forograils.User.password.minSize.error.password,forograils.User.password.minSize.error.java.lang.String,forograils.User.password.minSize.error,user.password.minSize.error.forograils.User.password,user.password.minSize.error.password,user.password.minSize.error.java.lang.String,user.password.minSize.error,forograils.User.password.minSize.notmet.forograils.User.password,forograils.User.password.minSize.notmet.password,forograils.User.password.minSize.notmet.java.lang.String,forograils.User.password.minSize.notmet,user.password.minSize.notmet.forograils.User.password,user.password.minSize.notmet.password,user.password.minSize.notmet.java.lang.String,user.password.minSize.notmet,minSize.notmet.forograils.User.password,minSize.notmet.password,minSize.notmet.java.lang.String,minSize.notmet]; arguments [password,class forograils.User,aaaaaA1,8]; default message [Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]]&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [aaaaaA1]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,aaaaaA1]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 2 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [aaaaaA1]; codes [forograils.User.password.minSize.error.forograils.User.password,forograils.User.password.minSize.error.password,forograils.User.password.minSize.error.java.lang.String,forograils.User.password.minSize.error,user.password.minSize.error.forograils.User.password,user.password.minSize.error.password,user.password.minSize.error.java.lang.String,user.password.minSize.error,forograils.User.password.minSize.notmet.forograils.User.password,forograils.User.password.minSize.notmet.password,forograils.User.password.minSize.notmet.java.lang.String,forograils.User.password.minSize.notmet,user.password.minSize.notmet.forograils.User.password,user.password.minSize.notmet.password,user.password.minSize.notmet.java.lang.String,user.password.minSize.notmet,minSize.notmet.forograils.User.password,minSize.notmet.password,minSize.notmet.java.lang.String,minSize.notmet]; arguments [password,class forograils.User,aaaaaA1,8]; default message [Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]]
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [aaaaaA1]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,aaaaaA1]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute password: aaaaaaaaa, field: notCorrect, valid: false " time="0.159">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,aaaaaaaaa]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,aaaaaaaaa]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute password: aaaaaaaaa1, field: notCorrect, valid: false " time="0.079">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa1]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,aaaaaaaaa1]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa1]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,aaaaaaaaa1]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute password: 1111111111, field: notCorrect, valid: false " time="0.19">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [1111111111]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,1111111111]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [1111111111]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,1111111111]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute password: 111111111A, field: notCorrect, valid: false " time="0.102">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [111111111A]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,111111111A]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [111111111A]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,111111111A]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute password: AAAAAAAAAa, field: notCorrect, valid: false " time="0.086">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [AAAAAAAAAa]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,AAAAAAAAAa]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [AAAAAAAAAa]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,AAAAAAAAAa]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute password: 11111a1111, field: notCorrect, valid: false " time="0.195">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [11111a1111]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,11111a1111]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [11111a1111]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,11111a1111]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute password: Prueba2015, field: CorrectPassword, valid: true " time="0.082">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Prueba2015]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Prueba2015]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [Prueba2015]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,Prueba2015]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forograils.UserSpec" name="test user attribute password: comoPuede5, field: CorrectPassword, valid: true " time="0.074">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [comoPuede5]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,comoPuede5]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]&#xa;forograils.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forograils.User&apos; on field &apos;password&apos;: rejected value [comoPuede5]; codes [forograils.User.password.validator.error.forograils.User.password,forograils.User.password.validator.error.password,forograils.User.password.validator.error.java.lang.String,forograils.User.password.validator.error,user.password.validator.error.forograils.User.password,user.password.validator.error.password,user.password.validator.error.java.lang.String,user.password.validator.error,forograils.User.password.validator.invalid.forograils.User.password,forograils.User.password.validator.invalid.password,forograils.User.password.validator.invalid.java.lang.String,forograils.User.password.validator.invalid,user.password.validator.invalid.forograils.User.password,user.password.validator.invalid.password,user.password.validator.invalid.java.lang.String,user.password.validator.invalid,validator.invalid.forograils.User.password,validator.invalid.password,validator.invalid.java.lang.String,validator.invalid]; arguments [password,class forograils.User,comoPuede5]; default message [Property [{0}] of class [{1}] with value [{2}] does not pass custom validation]
forograils.User : (unsaved)

	at forograils.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <system-out><![CDATA[--Output from test user attribute name: ab, field: minSize, valid: false --
--Output from test user attribute name: null, field: null, valid: false --
--Output from test user attribute name: abc, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute name: , field: blank, valid: false --
--Output from test user attribute lastname: ab, field: minSize, valid: false --
--Output from test user attribute lastname: null, field: null, valid: false --
--Output from test user attribute lastname: abc, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute lastname: , field: blank, valid: true --
--Output from test user attribute age: 13, field: minAge, valid: false --
--Output from test user attribute age: 14, field: Age, valid: true --
--Output from test user attribute username: , field: blank, valid: false --
--Output from test user attribute username: null, field: null, valid: false --
--Output from test user attribute username: pablo, field: unique, valid: false --
--Output from test user attribute username: pedro, field: username, valid: true --
--Output from test user attribute password: , field: blank, valid: false --
--Output from test user attribute password: null, field: null, valid: false --
--Output from test user attribute password: aaaaaA1, field: minSize, valid: false --
--Output from test user attribute password: aaaaaaaaa, field: notCorrect, valid: false --
--Output from test user attribute password: aaaaaaaaa1, field: notCorrect, valid: false --
--Output from test user attribute password: 1111111111, field: notCorrect, valid: false --
--Output from test user attribute password: 111111111A, field: notCorrect, valid: false --
--Output from test user attribute password: AAAAAAAAAa, field: notCorrect, valid: false --
--Output from test user attribute password: 11111a1111, field: notCorrect, valid: false --
--Output from test user attribute password: Prueba2015, field: CorrectPassword, valid: true --
--Output from test user attribute password: comoPuede5, field: CorrectPassword, valid: true --
]]></system-out>

      <system-err><![CDATA[--Output from test user attribute name: ab, field: minSize, valid: false --
--Output from test user attribute name: null, field: null, valid: false --
--Output from test user attribute name: abc, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute name: , field: blank, valid: false --
--Output from test user attribute lastname: ab, field: minSize, valid: false --
--Output from test user attribute lastname: null, field: null, valid: false --
--Output from test user attribute lastname: abc, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute lastname: , field: blank, valid: true --
--Output from test user attribute age: 13, field: minAge, valid: false --
--Output from test user attribute age: 14, field: Age, valid: true --
--Output from test user attribute username: , field: blank, valid: false --
--Output from test user attribute username: null, field: null, valid: false --
--Output from test user attribute username: pablo, field: unique, valid: false --
--Output from test user attribute username: pedro, field: username, valid: true --
--Output from test user attribute password: , field: blank, valid: false --
--Output from test user attribute password: null, field: null, valid: false --
--Output from test user attribute password: aaaaaA1, field: minSize, valid: false --
--Output from test user attribute password: aaaaaaaaa, field: notCorrect, valid: false --
--Output from test user attribute password: aaaaaaaaa1, field: notCorrect, valid: false --
--Output from test user attribute password: 1111111111, field: notCorrect, valid: false --
--Output from test user attribute password: 111111111A, field: notCorrect, valid: false --
--Output from test user attribute password: AAAAAAAAAa, field: notCorrect, valid: false --
--Output from test user attribute password: 11111a1111, field: notCorrect, valid: false --
--Output from test user attribute password: Prueba2015, field: CorrectPassword, valid: true --
--Output from test user attribute password: comoPuede5, field: CorrectPassword, valid: true --
]]></system-err>

  </testsuite>
</testsuites>
